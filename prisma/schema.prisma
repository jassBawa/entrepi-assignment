// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}



// prisma/schema.prisma

datasource db {
   provider = "sqlite"
  url      = "file:./dev.db"
}


model User {
  id                  Int                  @id @default(autoincrement())
  email               String               @unique
  name                String?
  xp                  Int                  @default(0)
  streak              Streak?              @relation("UserStreak")
  reflectiveQuestions ReflectiveQuestion[]
  userSkills          UserSkill[]
}

model Streak {
  id           Int      @id @default(autoincrement())
  currentCount Int      @default(0)
  lastActive   DateTime
  user         User     @relation("UserStreak", fields: [userId], references: [id])
  userId       Int      @unique
}

model ReflectiveQuestion {
  id       Int      @id @default(autoincrement())
  question String
  answer   String?                 // Userâ€™s answer (can be updated later)
  date     DateTime  @default(now())
  user     User      @relation(fields: [userId], references: [id])
  userId   Int
}

model Skill {
  id         Int         @id @default(autoincrement())
  name       String
  userSkills UserSkill[]
}

model UserSkill {
  id      Int    @id @default(autoincrement())
  xp      Int    @default(0)            // XP earned for this specific skill
  user    User   @relation(fields: [userId], references: [id])
  userId  Int
  skill   Skill  @relation(fields: [skillId], references: [id])
  skillId Int
}
